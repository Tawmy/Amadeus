// <auto-generated />
using Amadeus.Db;
using Amadeus.Db.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Amadeus.Db.Migrations
{
    [DbContext(typeof(AmadeusContext))]
    [Migration("20211202222104_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "discord_entity_type", new[] { "channel", "role" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Amadeus.Db.Models.CommandConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<bool>("IsModule")
                        .HasColumnType("boolean")
                        .HasColumnName("is_module");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_command_config");

                    b.ToTable("command_config", (string)null);
                });

            modelBuilder.Entity("Amadeus.Db.Models.CommandConfigDiscordEntityAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CommandConfigId")
                        .HasColumnType("integer")
                        .HasColumnName("command_config_id");

                    b.Property<decimal>("DiscordEntityId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("discord_entity_id");

                    b.Property<bool>("IsBlacklist")
                        .HasColumnType("boolean")
                        .HasColumnName("is_blacklist");

                    b.HasKey("Id")
                        .HasName("pk_command_config_discord_entity_assignment");

                    b.HasIndex("CommandConfigId")
                        .HasDatabaseName("ix_command_config_discord_entity_assignment_command_config_id");

                    b.HasIndex("DiscordEntityId")
                        .HasDatabaseName("ix_command_config_discord_entity_assignment_discord_entity_id");

                    b.ToTable("command_config_discord_entity_assignment", (string)null);
                });

            modelBuilder.Entity("Amadeus.Db.Models.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfigOptionId")
                        .HasColumnType("integer")
                        .HasColumnName("config_option_id");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_configs");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_configs_guild_id");

                    b.ToTable("configs", (string)null);
                });

            modelBuilder.Entity("Amadeus.Db.Models.DiscordEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.Property<DiscordEntityType>("DiscordEntityType")
                        .HasColumnType("discord_entity_type")
                        .HasColumnName("discord_entity_type");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.HasKey("Id")
                        .HasName("pk_discord_entities");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_discord_entities_guild_id");

                    b.ToTable("discord_entities", (string)null);
                });

            modelBuilder.Entity("Amadeus.Db.Models.Guild", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_guilds");

                    b.ToTable("guilds", (string)null);
                });

            modelBuilder.Entity("Amadeus.Db.Models.SelfAssignMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("RequiredRoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("required_role_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_self_assign_menu");

                    b.HasIndex("RequiredRoleId")
                        .HasDatabaseName("ix_self_assign_menu_required_role_id");

                    b.ToTable("self_assign_menu", (string)null);
                });

            modelBuilder.Entity("Amadeus.Db.Models.SelfAssignMenuDiscordEntityAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscordEntityId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("discord_entity_id");

                    b.Property<int>("SelfAssignMenuId")
                        .HasColumnType("integer")
                        .HasColumnName("self_assign_menu_id");

                    b.HasKey("Id")
                        .HasName("pk_self_assign_menu_discord_entity_assignment");

                    b.HasIndex("DiscordEntityId")
                        .HasDatabaseName("ix_self_assign_menu_discord_entity_assignment_discord_entity_id");

                    b.HasIndex("SelfAssignMenuId")
                        .HasDatabaseName("ix_self_assign_menu_discord_entity_assignment_self_assign_menu");

                    b.ToTable("self_assign_menu_discord_entity_assignment", (string)null);
                });

            modelBuilder.Entity("Amadeus.Db.Models.CommandConfigDiscordEntityAssignment", b =>
                {
                    b.HasOne("Amadeus.Db.Models.CommandConfig", "CommandConfig")
                        .WithMany("CommandConfigDiscordEntityAssignments")
                        .HasForeignKey("CommandConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_command_config_discord_entity_assignment_command_config_com");

                    b.HasOne("Amadeus.Db.Models.DiscordEntity", "DiscordEntity")
                        .WithMany("CommandConfigDiscordEntityAssignments")
                        .HasForeignKey("DiscordEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_command_config_discord_entity_assignment_discord_entities_d");

                    b.Navigation("CommandConfig");

                    b.Navigation("DiscordEntity");
                });

            modelBuilder.Entity("Amadeus.Db.Models.Config", b =>
                {
                    b.HasOne("Amadeus.Db.Models.Guild", "Guild")
                        .WithMany("Configs")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_configs_guilds_guild_id");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Amadeus.Db.Models.DiscordEntity", b =>
                {
                    b.HasOne("Amadeus.Db.Models.Guild", "Guild")
                        .WithMany("DiscordEntities")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_discord_entities_guilds_guild_id");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Amadeus.Db.Models.SelfAssignMenu", b =>
                {
                    b.HasOne("Amadeus.Db.Models.DiscordEntity", "RequiredRole")
                        .WithMany("SelfAssignMenus")
                        .HasForeignKey("RequiredRoleId")
                        .HasConstraintName("fk_self_assign_menu_discord_entities_required_role_id");

                    b.Navigation("RequiredRole");
                });

            modelBuilder.Entity("Amadeus.Db.Models.SelfAssignMenuDiscordEntityAssignment", b =>
                {
                    b.HasOne("Amadeus.Db.Models.DiscordEntity", "DiscordEntity")
                        .WithMany("SelfAssignMenuDiscordEntityAssignments")
                        .HasForeignKey("DiscordEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_self_assign_menu_discord_entity_assignment_discord_entities");

                    b.HasOne("Amadeus.Db.Models.SelfAssignMenu", "SelfAssignMenu")
                        .WithMany("SelfAssignMenuDiscordEntityAssignments")
                        .HasForeignKey("SelfAssignMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_self_assign_menu_discord_entity_assignment_self_assign_menu");

                    b.Navigation("DiscordEntity");

                    b.Navigation("SelfAssignMenu");
                });

            modelBuilder.Entity("Amadeus.Db.Models.CommandConfig", b =>
                {
                    b.Navigation("CommandConfigDiscordEntityAssignments");
                });

            modelBuilder.Entity("Amadeus.Db.Models.DiscordEntity", b =>
                {
                    b.Navigation("CommandConfigDiscordEntityAssignments");

                    b.Navigation("SelfAssignMenuDiscordEntityAssignments");

                    b.Navigation("SelfAssignMenus");
                });

            modelBuilder.Entity("Amadeus.Db.Models.Guild", b =>
                {
                    b.Navigation("Configs");

                    b.Navigation("DiscordEntities");
                });

            modelBuilder.Entity("Amadeus.Db.Models.SelfAssignMenu", b =>
                {
                    b.Navigation("SelfAssignMenuDiscordEntityAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
